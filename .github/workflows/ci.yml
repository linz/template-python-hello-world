name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python: [3.6, 3.7, 3.8, 3.9]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('./poetry.lock') }}
          restore-keys: ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-
      - name: Install
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m poetry install
      - name: Lint Last Commit
        if: github.event_name == 'push'
        run: |
          poetry run gitlint
      - name: Lint All Commits on Pull Request
        if: github.event_name == 'pull_request'
        run: |
          poetry run gitlint --commits "origin/${{ github.base_ref }}...HEAD"
      - name: Format
        run: |
          poetry run pre-commit run --all-files
      - name: Test
        run: |
          poetry run coverage run --module pytest
      - name: Verify test coverage
        run: |
          poetry run coverage html
      - name: Archive code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: htmlcov
        if: ${{ failure() }}
